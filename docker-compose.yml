services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_volume:/Inframe-Backend/static

    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env    
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py makemigrations --noinput &&
            python manage.py migrate --noinput &&
            gunicorn --workers=2 --bind 0.0.0.0:8000 config.wsgi:application"
    develop:
       watch:
        - action: rebuild
          path: requirements.txt
          ignore:
          - .venv
        - action: sync
          path: ./manage.py
          target: /Inframe-Backend/manage.py
    networks:
      - inf
      
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - inf

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - inf

  celery:
    container_name: celery-worker
    build:
      context: .
    command: >
      celery -A config worker --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    networks:
      - inf

  celery-beat:
    container_name: celery-beat
    build:
      context: .
    command:  >
      celery -A config beat --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    networks:
      - inf

volumes:
  static_volume:
  redis_data:
networks:
  inf:
    driver: bridge
