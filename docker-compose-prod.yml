services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    env_file:
      - .env
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  backend:
    container_name: backend
    image: inframe2/hyeonho2:0.104.86
    env_file:
      - .env
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py makemigrations --noinput &&
            python manage.py migrate --noinput &&
            gunicorn --workers=2 --bind 0.0.0.0:8000 config.wsgi:application"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.routers.backend.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    environment:
     - REDIS_HOST=${EC2_HOST}
     - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//
    networks:
      - inf
     
  celery:
    build:
      context: .
    command:  >
      sh -c "celery -A config worker --loglevel=info"
    environment:
      - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//
      - REDIS_HOST=${EC2_HOST}
    networks:
      - inf

  celery-beat:
    build:
      context: .
    command:  >
      sh -c "celery -A config beat --loglevel=info"
    environment:
      - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//
      - REDIS_HOST=${EC2_HOST}
    networks:
      - inf

volumes:
  static_volume:

networks:
  inf:
    driver: bridge
