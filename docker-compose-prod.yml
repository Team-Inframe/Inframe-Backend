services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    env_file:
      - .env
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--providers.docker.network=inf"
    ports:
      - "80:80"
      - "8080:8080"
      - "8091:8091"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - inf

  backend:
    container_name: backend
    volumes:
      - static_volume:/Inframe-Backend/static
    image: inframe2/hyeonho2:1.1.20250127182918
    env_file:
      - .env
    ports:
      - "8000:8000"
    restart: always
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py makemigrations --noinput &&
            python manage.py migrate --noinput &&
            gunicorn --workers=2 --bind 0.0.0.0:8000 config.wsgi:application"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=web"
    environment:
      - REDIS_HOST=${EC2_HOST}
      - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//

  celery:
    build:
      context: .
    container_name: celery
    command:  >
      sh -c "celery -A config worker --loglevel=info"
    environment:
      - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//
      - REDIS_HOST=${EC2_HOST}

  celery-beat:
    build:
      context: .
    container_name: celery-beat
    command:  >
      sh -c "celery -A config beat --loglevel=info"
    environment:
      - CELERY_BROKER_URL=amqp://inframe:inframe@${EC2_HOST}:5672//
      - REDIS_HOST=${EC2_HOST}

volumes:
  static_volume:

networks:
  inf:
    driver: bridge
