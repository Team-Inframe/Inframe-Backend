services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py migrate --noinput &&
            gunicorn --workers=2 --bind 0.0.0.0:8000 config.wsgi:application"
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.backend.loadbalancer.server.port=8000"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.rule=Host(`inframe-server.shop`)"
        - "traefik.http.routers.backend.tls.certresolver=letsencrypt"

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=inframe0201@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--api.dashboard=true"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/letsencrypt/acme.json
    networks:
      - inframe_net

networks:
  inframe_net:
    driver: bridge